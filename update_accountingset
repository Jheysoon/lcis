<?php


$seconds = 2000000;
set_time_limit ($seconds);
ini_set('memory_limit', '-1');
try{

      $user = 'root';
      $pass = 'lcis+dev2015';
      $cn   = new PDO("mysql:host=localhost;dbname=legacy_billings", $user, $pass);


      function add_movement($accounttype, $accountingset, $academicterm, $nowdate, $id, $currentbalances, $totalrun, $amountpaids, $type, $tys){
         global $cn;
            $insertMovement = $cn->prepare("INSERT INTO tbl_movement SET account = '$accounttype', accountingset = '$accountingset', academicterm = '$academicterm',
            systemdate = '$nowdate', valuedate = '$nowdate', referencetype = '$tys', type = '$type', referenceid = '$id', previousbalance = '$currentbalances', amount = '$amountpaids', runbalance = '$totalrun'");
            $insertMovement->execute();
      }






      $getPayment = $cn->prepare("SELECT * FROM 1st_07_08 WHERE ENROLFLAG = 'Y'");
      $getPayment->execute();
      $allpayment = $getPayment->fetchAll();
      foreach ($allpayment as $key => $value) {
          extract($value);


           $academicterm = '25';

          $getAccount = $cn->prepare("SELECT a.id as partyid, b.id as accountno, b.currentbalance as curr  FROM tbl_party a, tbl_account b WHERE a.legacyid = '$IDNO' AND a.id = b.party");
          $getAccount->execute();
          $acc = $getAccount->fetch();
          $partyid = $acc['partyid'];

          $getbilling = $cn->prepare("SELECT tbl_billclass.id as billid FROM tbl_billclass, tbl_enrolment WHERE tbl_billclass.enrolment = tbl_enrolment.id AND tbl_enrolment.student = '$partyid' AND tbl_enrolment.academicterm = '$academicterm'");
          $getbilling->execute();
          $billid = $getbilling->fetch();
          $bills = $billid['billid'];

          $date = explode("/", $DATE_OR);
        //  print_r($date);
          $dates = $date[2]. "-" .$date['0']. "-". $date['1'];
          echo $dates;

          $getAccountingset = $cn->prepare("SELECT accountingset FROM tbl_systemvalues");
          $getAccountingset->execute();
          $set = $getAccountingset->fetch();
          $accountingset = $set['accountingset'] + 1;




         $insertpayment = $cn->prepare("INSERT INTO tbl_payment SET paymenttype = '1', billing = '$bills', officialreceipt = '$ENTRA_OR', academicterm = '$academicterm', phase = '1', amount = '$AMTPAID', ordate = '$dates'");
         $insertpayment->execute();
         $paymentid = $cn->lastInsertId();


          $accountid = $acc['accountno'];
          $accountbal = $acc['curr'];
          echo $IDNO . "|" .  $AMTPAID . "|" . $accountid . "|" . $bills . "|" . $paymentid ."<br />";


          $nowdate = Date('Y-m-d');
          $amountpaids = "-".$AMTPAID;
          $currentbalances = $accountbal;
          $totalrun = $accountbal + $amountpaids;
          $type = 'C';
          $tys = 6;
          $id = $paymentid;
          $accounttype = $accountid;
          $academicterm = '25';

          add_movement($accounttype, $accountingset, $academicterm, $nowdate, $id, $currentbalances, $totalrun, $amountpaids, $type, $tys)
          $greg = $cn->prepare("UPDATE tbl_account SET currentbalance = '$totalrun' WHERE id = '$accounttype'");
          $greg->execute();

          $getCash = $cn->prepare("SELECT b.id as cashacc, b.currentbalance as cashbal  FROM tbl_account b WHERE b.id = '140333'");
          $getCash->execute();
          $cash = $getCash->fetch();


          $cashid = '140333';
          $cashbal = $cash['cashbal'];

          $amountpaids = $AMTPAID;
          $currentbalances = $cashbal;
          $totalrun = $cashbal + $amountpaids;
          $type = 'D';
          $tys = 6;
          $id = $paymentid;
          $accounttype = $accountid;
          $academicterm = '25';


          add_movement($accounttype, $accountingset, $academicterm, $nowdate, $id, $currentbalances, $totalrun, $amountpaids, $type, $tys);
          $greg = $cn->prepare("UPDATE tbl_account SET currentbalance = '$totalrun' WHERE id = '$accounttype'");
          $greg->execute();
          $ups = $cn->prepare("UPDATE tbl_systemvalues SET accountingset = '$accountingset'");
          $ups->execute();

      }

    }
catch( PDOException $e){
    echo $e;
}

?>
